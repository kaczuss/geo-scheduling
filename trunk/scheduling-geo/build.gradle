
apply plugin: "java"
apply plugin: "maven"
apply plugin: 'findbugs'
apply plugin: 'pmd'
//TODO: poprawić konfigurację checkstyle, tak żeby była taka sama w eclipsie i w gradle!
apply plugin: 'checkstyle'

group = "pl.kaczanowski"
version = 1.0

repositories {
    mavenCentral()
}

tasks.withType(Compile) {
	options.encoding = 'UTF-8'
	options.compilerArgs = ['-source', '7', '-target', '7']
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}

sourceSets {
    api
    impl
}

dependencies {

    implCompile sourceSets.api.output
    implCompile ('org.apache.commons:commons-lang3:3.1'){
            exclude(group: 'junit', module: 'junit')
    }
    implCompile 'com.google.guava:guava:13.0.1'
    implCompile 'com.google.code.guice:guice:1.0'
    

    testCompile 'org.testng:testng:6.8'
    testCompile 'org.mockito:mockito-all:1.9.0'
    testCompile ('org.easytesting:fest-assert:1.4'){
            exclude(group: 'junit', module: 'junit')
    }
    testCompile sourceSets.api.output
    testCompile sourceSets.impl.output
    runtime configurations.apiRuntime
    runtime configurations.implRuntime
}
jar {
    from sourceSets.api.output
    from sourceSets.impl.output
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri("${buildDir}/repo"))

            addFilter("main") { artifact, file -> artifact.name == project.name }
            ["api", "impl"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                
                // We now have to map our configurations to the correct maven scope for each pom
                ["compile", "runtime"].each { scope ->
                    configuration = configurations[type + scope.capitalize()]
                    ["main", type].each { pomName ->
                        pom(pomName).scopeMappings.addMapping 1, configuration, scope
                    }
                }
            }

        }
    }
}
